/*
 * Copyright (C) 2016 Alessandro Yuichi Okimoto
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 * Contact email: alessandro@alessandro.jp
 */

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group = GROUP
version = VERSION_NAME

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId GROUP
            artifactId POM_ARTIFACT_ID
            version VERSION_NAME
            artifact(androidSourcesJar)
            artifact(androidJavadocsJar)
            artifact source: file("${project.buildDir}/outputs/aar/${project.name}-release.aar")
            artifact source: file("${project.buildDir}/libs/${project.name}-${project.version}.jar")

            pom.withXml {
                Node root = asNode()
                root.appendNode('name', POM_ARTIFACT_ID)
                root.appendNode('description', POM_DESCRIPTION)
                root.appendNode('url', POM_URL)

                def issues = root.appendNode('issueManagement')
                issues.appendNode('system', 'github')
                issues.appendNode('url', POM_ISSUE_URL)

                def scm = root.appendNode('scm')
                scm.appendNode('url', POM_SCM_URL)
                scm.appendNode('connection', POM_SCM_CONNECTION)
                scm.appendNode('developerConnection', POM_SCM_DEV_CONNECTION)

                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode('name', POM_LICENCE_NAME)
                license.appendNode('url', POM_LICENCE_URL)
                license.appendNode('distribution', POM_LICENCE_DIST)

                def developer = root.appendNode('developers').appendNode('developer')
                developer.appendNode('id', POM_DEVELOPER_ID)
                developer.appendNode('name', POM_DEVELOPER_NAME)
                developer.appendNode('email', POM_DEVELOPER_EMAIL)
            }
        }
    }
}

bintray {
    user = project.hasProperty("bintray.user") ? project.getProperty("bintray.user") : ""
    key = project.hasProperty("bintray.apiKey") ? project.getProperty("bintray.apiKey") : ""

    publications = ['mavenJava']

    pkg {
        repo = 'android' // Bintray repository name
        name = 'easy-checkout' // Bintray package name
        desc = POM_DESCRIPTION
        publish = true
        publicDownloadNumbers = true
        licenses = ['Apache-2.0']
        version {
            desc = POM_DESCRIPTION
            released = new Date()
            gpg {
                sign = true
                passphrase = project.hasProperty("bintray.gpg.password") ? project.getProperty("bintray.gpg.password") : ""
            }
        }
    }
}

task androidJavadocs(type: Javadoc) {
    source = 'src/main/java, src/main/aidl'
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}